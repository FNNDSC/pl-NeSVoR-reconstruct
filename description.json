{
  "type": "ds",
  "parameters": [
    {
      "name": "input_stacks",
      "type": "str",
      "optional": false,
      "flag": "--input-stacks",
      "short_flag": "--input-stacks",
      "action": "store",
      "help": "Paths to the input stacks (NIfTI).",
      "default": null,
      "ui_exposed": true
    },
    {
      "name": "thicknesses",
      "type": "float",
      "optional": true,
      "flag": "--thicknesses",
      "short_flag": "--thicknesses",
      "action": "store",
      "help": "Slice thickness of each input stack. If not provided, use the slice gap of the input stack. If only a single number is provided, Assume all input stacks have the same thickness.",
      "default": 0.0,
      "ui_exposed": true
    },
    {
      "name": "stack_masks",
      "type": "str",
      "optional": true,
      "flag": "--stack-masks",
      "short_flag": "--stack-masks",
      "action": "store",
      "help": "Paths to masks of input stacks.",
      "default": "",
      "ui_exposed": true
    },
    {
      "name": "volume_mask",
      "type": "str",
      "optional": true,
      "flag": "--volume-mask",
      "short_flag": "--volume-mask",
      "action": "store",
      "help": "Paths to a 3D mask which will be applied to each input stack.",
      "default": "",
      "ui_exposed": true
    },
    {
      "name": "stacks_intersection",
      "type": "bool",
      "optional": true,
      "flag": "--stacks-intersection",
      "short_flag": "--stacks-intersection",
      "action": "store_true",
      "help": "Only consider the region defined by the intersection of input stacks.\nWill be ignored if --volume-mask is provided.\n",
      "default": false,
      "ui_exposed": true
    },
    {
      "name": "background_threshold",
      "type": "float",
      "optional": true,
      "flag": "--background-threshold",
      "short_flag": "--background-threshold",
      "action": "store",
      "help": "pixels with value <= this threshold will be ignored.",
      "default": 0,
      "ui_exposed": true
    },
    {
      "name": "otsu_thresholding",
      "type": "bool",
      "optional": true,
      "flag": "--otsu-thresholding",
      "short_flag": "--otsu-thresholding",
      "action": "store_true",
      "help": "Apply Otsu thresholding to each input stack.",
      "default": false,
      "ui_exposed": true
    },
    {
      "name": "output_volume",
      "type": "str",
      "optional": false,
      "flag": "--output-volume",
      "short_flag": "--output-volume",
      "action": "store",
      "help": "Paths to the reconstructed volume",
      "default": null,
      "ui_exposed": true
    },
    {
      "name": "output_resolution",
      "type": "float",
      "optional": true,
      "flag": "--output-resolution",
      "short_flag": "--output-resolution",
      "action": "store",
      "help": "Isotropic resolution of the reconstructed volume",
      "default": 0.8,
      "ui_exposed": true
    },
    {
      "name": "output_intensity_mean",
      "type": "float",
      "optional": true,
      "flag": "--output-intensity-mean",
      "short_flag": "--output-intensity-mean",
      "action": "store",
      "help": "mean intensity of the output volume",
      "default": 700.0,
      "ui_exposed": true
    },
    {
      "name": "inference_batch_size",
      "type": "int",
      "optional": true,
      "flag": "--inference-batch-size",
      "short_flag": "--inference-batch-size",
      "action": "store",
      "help": "batch size for inference",
      "default": -1,
      "ui_exposed": true
    },
    {
      "name": "n_inference_samples",
      "type": "int",
      "optional": true,
      "flag": "--n-inference-samples",
      "short_flag": "--n-inference-samples",
      "action": "store",
      "help": "number of sample for PSF during inference",
      "default": -1,
      "ui_exposed": true
    },
    {
      "name": "output_psf_factor",
      "type": "float",
      "optional": true,
      "flag": "--output-psf-factor",
      "short_flag": "--output-psf-factor",
      "action": "store",
      "help": "Determind the psf for generating output volume: FWHM = output-resolution * output-psf-factor",
      "default": 1.0,
      "ui_exposed": true
    },
    {
      "name": "sample_orientation",
      "type": "str",
      "optional": true,
      "flag": "--sample-orientation",
      "short_flag": "--sample-orientation",
      "action": "store",
      "help": "Path to a nii file. The sampled volume will be reoriented according to the transformatio in this file.",
      "default": "",
      "ui_exposed": true
    },
    {
      "name": "sample_mask",
      "type": "str",
      "optional": true,
      "flag": "--sample-mask",
      "short_flag": "--sample-mask",
      "action": "store",
      "help": "3D Mask for sampling INR. If not provided, will use a mask esitmated from the input data.",
      "default": "",
      "ui_exposed": true
    },
    {
      "name": "segmentation",
      "type": "bool",
      "optional": true,
      "flag": "--segmentation",
      "short_flag": "--segmentation",
      "action": "store_true",
      "help": "Perform 2D fetal brain segmentation/masking for each input stack.",
      "default": false,
      "ui_exposed": true
    },
    {
      "name": "batch_size_seg",
      "type": "int",
      "optional": true,
      "flag": "--batch-size-seg",
      "short_flag": "--batch-size-seg",
      "action": "store",
      "help": "batch size for segmentation",
      "default": 64,
      "ui_exposed": true
    },
    {
      "name": "no_augmentation_seg",
      "type": "bool",
      "optional": true,
      "flag": "--no-augmentation-seg",
      "short_flag": "--no-augmentation-seg",
      "action": "store_true",
      "help": "disable inference data augmentation in segmentation",
      "default": false,
      "ui_exposed": true
    },
    {
      "name": "dilation_radius_seg",
      "type": "float",
      "optional": true,
      "flag": "--dilation-radius-seg",
      "short_flag": "--dilation-radius-seg",
      "action": "store",
      "help": "dilation radius for segmentation mask in millimeter.",
      "default": 1.0,
      "ui_exposed": true
    },
    {
      "name": "threshold_small_seg",
      "type": "float",
      "optional": true,
      "flag": "--threshold-small-seg",
      "short_flag": "--threshold-small-seg",
      "action": "store",
      "help": "Threshold for removing small segmetation mask (between 0 and 1). A mask will be removed if its area < threshold * max area in the stack.",
      "default": 0.1,
      "ui_exposed": true
    },
    {
      "name": "bias_field_correction",
      "type": "bool",
      "optional": true,
      "flag": "--bias-field-correction",
      "short_flag": "--bias-field-correction",
      "action": "store_true",
      "help": "Perform bias field correction using the N4 algorithm.",
      "default": false,
      "ui_exposed": true
    },
    {
      "name": "n_proc_n4",
      "type": "int",
      "optional": true,
      "flag": "--n-proc-n4",
      "short_flag": "--n-proc-n4",
      "action": "store",
      "help": "number of workers for the N4 algorithm.",
      "default": 8,
      "ui_exposed": true
    },
    {
      "name": "shrink_factor_n4",
      "type": "int",
      "optional": true,
      "flag": "--shrink-factor-n4",
      "short_flag": "--shrink-factor-n4",
      "action": "store",
      "help": "The shrink factor used to reduce the size and complexity of the image.",
      "default": 2,
      "ui_exposed": true
    },
    {
      "name": "tol_n4",
      "type": "float",
      "optional": true,
      "flag": "--tol-n4",
      "short_flag": "--tol-n4",
      "action": "store",
      "help": "The convergence threshold in N4.",
      "default": 0.001,
      "ui_exposed": true
    },
    {
      "name": "spline_order_n4",
      "type": "int",
      "optional": true,
      "flag": "--spline-order-n4",
      "short_flag": "--spline-order-n4",
      "action": "store",
      "help": "The order of B-spline.",
      "default": 3,
      "ui_exposed": true
    },
    {
      "name": "noise_n4",
      "type": "float",
      "optional": true,
      "flag": "--noise-n4",
      "short_flag": "--noise-n4",
      "action": "store",
      "help": "The noise estimate defining the Wiener filter.",
      "default": 0.01,
      "ui_exposed": true
    },
    {
      "name": "n_iter_n4",
      "type": "int",
      "optional": true,
      "flag": "--n-iter-n4",
      "short_flag": "--n-iter-n4",
      "action": "store",
      "help": "The maximum number of iterations specified at each fitting level.",
      "default": 50,
      "ui_exposed": true
    },
    {
      "name": "n_levels_n4",
      "type": "int",
      "optional": true,
      "flag": "--n-levels-n4",
      "short_flag": "--n-levels-n4",
      "action": "store",
      "help": "The maximum number of iterations specified at each fitting level.",
      "default": 4,
      "ui_exposed": true
    },
    {
      "name": "n_control_points_n4",
      "type": "int",
      "optional": true,
      "flag": "--n-control-points-n4",
      "short_flag": "--n-control-points-n4",
      "action": "store",
      "help": "The control point grid size in each dimension. The B-spline mesh size is equal to the number of control points in that dimension minus the spline order.",
      "default": 4,
      "ui_exposed": true
    },
    {
      "name": "n_bins_n4",
      "type": "int",
      "optional": true,
      "flag": "--n-bins-n4",
      "short_flag": "--n-bins-n4",
      "action": "store",
      "help": "The number of bins in the log input intensity histogram.",
      "default": 200,
      "ui_exposed": true
    },
    {
      "name": "metric",
      "type": "str",
      "optional": true,
      "flag": "--metric",
      "short_flag": "--metric",
      "action": "store",
      "help": "Metric for assessing input stacks.\n\n1. \"ncc\" (\u2191): cross correlaiton between adjacent slices;\n\n2. \"matrix-rank\" (\u2193): motion metric based on the rank of the data\n   matrix;\n\n3. \"volume\" (\u2191): volume of the masked ROI;\n\n4. \"iqa2d\" (\u2191): image quality score generated by a 2D CNN (only for\n   fetal brain), the score of a stack is the average score of the\n   images in it;\n\n5. \"iqa3d\" (\u2191): image quality score generated by a 3D CNN (only for\n   fetal brain);\n\n6. \"none\": no metric used for assessment.\n\n**Note**: (\u2191) means a stack with a higher score will have a better\nrank.\n [choices: ncc, matrix-rank, volume, iqa2d, iqa3d, none]",
      "default": "none",
      "ui_exposed": true
    },
    {
      "name": "filter_method",
      "type": "str",
      "optional": true,
      "flag": "--filter-method",
      "short_flag": "--filter-method",
      "action": "store",
      "help": "Method to remove low-quality stacks.\n\n1. \"top\": keep the top \"C\" stacks;\n\n2. \"bottom\": remove the bottom \"C\" stacks;\n\n3. \"threshold\": remove a stack if the metric is worse than \"C\";\n\n4. \"percentatge\": remove the bottom (\"num_stack * C\") stacks;\n\n5. \"none\": no filtering.\n\nThe value of \"C\" is specified by --cutoff.\n [choices: top, bottom, threshold, percentage, none]",
      "default": "none",
      "ui_exposed": true
    },
    {
      "name": "cutoff",
      "type": "float",
      "optional": true,
      "flag": "--cutoff",
      "short_flag": "--cutoff",
      "action": "store",
      "help": "The cutoff value for filtering, i.e., the value \"C\" in --filter-method\n",
      "default": 0.0,
      "ui_exposed": true
    },
    {
      "name": "registration",
      "type": "str",
      "optional": true,
      "flag": "--registration",
      "short_flag": "--registration",
      "action": "store",
      "help": "The type of registration method applied before reconstruction.\n\n1. \"svort\": try SVoRT and stack-to-stack registration and choose the\n   one with better NCC;\n\n2. \"svort-only\": only apply the SVoRT model;\n\n3. \"svort-stack\": only apply the stack transformations of SVoRT;\n\n4. \"stack\": stack-to-stack rigid registration;\n\n5. \"none\": no rigid registration.\n\n**Note**: The SVoRT model can be only applied to fetal brain data.\n [choices: svort, svort-only, svort-stack, stack, none]",
      "default": "svort",
      "ui_exposed": true
    },
    {
      "name": "svort_version",
      "type": "str",
      "optional": true,
      "flag": "--svort-version",
      "short_flag": "--svort-version",
      "action": "store",
      "help": "Version of SVoRT model [choices: v1, v2]",
      "default": "v2",
      "ui_exposed": true
    },
    {
      "name": "scanner_space",
      "type": "bool",
      "optional": true,
      "flag": "--scanner-space",
      "short_flag": "--scanner-space",
      "action": "store_true",
      "help": "Perform registration in the scanner space. Default: register the data to the atlas space when svort or svort-stack are used.",
      "default": false,
      "ui_exposed": true
    },
    {
      "name": "n_features_per_level",
      "type": "int",
      "optional": true,
      "flag": "--n-features-per-level",
      "short_flag": "--n-features-per-level",
      "action": "store",
      "help": "Length of the feature vector at each level.",
      "default": 2,
      "ui_exposed": true
    },
    {
      "name": "log2_hashmap_size",
      "type": "int",
      "optional": true,
      "flag": "--log2-hashmap-size",
      "short_flag": "--log2-hashmap-size",
      "action": "store",
      "help": "Max log2 size of the hash grid per level.",
      "default": 19,
      "ui_exposed": true
    },
    {
      "name": "level_scale",
      "type": "float",
      "optional": true,
      "flag": "--level-scale",
      "short_flag": "--level-scale",
      "action": "store",
      "help": "Scaling factor between two levels.",
      "default": 1.3819,
      "ui_exposed": true
    },
    {
      "name": "coarsest_resolution",
      "type": "float",
      "optional": true,
      "flag": "--coarsest-resolution",
      "short_flag": "--coarsest-resolution",
      "action": "store",
      "help": "Resolution of the coarsest grid in millimeter.",
      "default": 16.0,
      "ui_exposed": true
    },
    {
      "name": "finest_resolution",
      "type": "float",
      "optional": true,
      "flag": "--finest-resolution",
      "short_flag": "--finest-resolution",
      "action": "store",
      "help": "Resolution of the finest grid in millimeter.",
      "default": 0.5,
      "ui_exposed": true
    },
    {
      "name": "n_levels_bias",
      "type": "int",
      "optional": true,
      "flag": "--n-levels-bias",
      "short_flag": "--n-levels-bias",
      "action": "store",
      "help": "Number of levels used for bias field estimation.",
      "default": 0,
      "ui_exposed": true
    },
    {
      "name": "depth",
      "type": "int",
      "optional": true,
      "flag": "--depth",
      "short_flag": "--depth",
      "action": "store",
      "help": "Number of hidden layers in MLPs.",
      "default": 1,
      "ui_exposed": true
    },
    {
      "name": "width",
      "type": "int",
      "optional": true,
      "flag": "--width",
      "short_flag": "--width",
      "action": "store",
      "help": "Number of neuron in each hidden layer.",
      "default": 64,
      "ui_exposed": true
    },
    {
      "name": "n_features_z",
      "type": "int",
      "optional": true,
      "flag": "--n-features-z",
      "short_flag": "--n-features-z",
      "action": "store",
      "help": "Length of the intermediate feature vector z.",
      "default": 15,
      "ui_exposed": true
    },
    {
      "name": "n_features_slice",
      "type": "int",
      "optional": true,
      "flag": "--n-features-slice",
      "short_flag": "--n-features-slice",
      "action": "store",
      "help": "Length of the slice embedding vector e.",
      "default": 16,
      "ui_exposed": true
    },
    {
      "name": "no_transformation_optimization",
      "type": "bool",
      "optional": true,
      "flag": "--no-transformation-optimization",
      "short_flag": "--no-transformation-optimization",
      "action": "store_true",
      "help": "Disable optimization for rigid slice transfromation, i.e., the slice transformations are fixed",
      "default": false,
      "ui_exposed": true
    },
    {
      "name": "no_slice_scale",
      "type": "bool",
      "optional": true,
      "flag": "--no-slice-scale",
      "short_flag": "--no-slice-scale",
      "action": "store_true",
      "help": "Disable adaptive scaling for slices.",
      "default": false,
      "ui_exposed": true
    },
    {
      "name": "no_pixel_variance",
      "type": "bool",
      "optional": true,
      "flag": "--no-pixel-variance",
      "short_flag": "--no-pixel-variance",
      "action": "store_true",
      "help": "Disable pixel-level variance.",
      "default": false,
      "ui_exposed": true
    },
    {
      "name": "no_slice_variance",
      "type": "bool",
      "optional": true,
      "flag": "--no-slice-variance",
      "short_flag": "--no-slice-variance",
      "action": "store_true",
      "help": "Disable slice-level variance.",
      "default": false,
      "ui_exposed": true
    },
    {
      "name": "deformable",
      "type": "bool",
      "optional": true,
      "flag": "--deformable",
      "short_flag": "--deformable",
      "action": "store_true",
      "help": "Enable implicit deformation field.",
      "default": false,
      "ui_exposed": true
    },
    {
      "name": "n_features_deform",
      "type": "int",
      "optional": true,
      "flag": "--n-features-deform",
      "short_flag": "--n-features-deform",
      "action": "store",
      "help": "Length of the deformation embedding vector.",
      "default": 8,
      "ui_exposed": true
    },
    {
      "name": "n_features_per_level_deform",
      "type": "int",
      "optional": true,
      "flag": "--n-features-per-level-deform",
      "short_flag": "--n-features-per-level-deform",
      "action": "store",
      "help": "Length of the feature vector at each level (deformation field).",
      "default": 4,
      "ui_exposed": true
    },
    {
      "name": "level_scale_deform",
      "type": "float",
      "optional": true,
      "flag": "--level-scale-deform",
      "short_flag": "--level-scale-deform",
      "action": "store",
      "help": "Scaling factor between two levels (deformation field).",
      "default": 1.3819,
      "ui_exposed": true
    },
    {
      "name": "coarsest_resolution_deform",
      "type": "float",
      "optional": true,
      "flag": "--coarsest-resolution-deform",
      "short_flag": "--coarsest-resolution-deform",
      "action": "store",
      "help": "Resolution of the coarsest grid in millimeter (deformation field).",
      "default": 32.0,
      "ui_exposed": true
    },
    {
      "name": "finest_resolution_deform",
      "type": "float",
      "optional": true,
      "flag": "--finest-resolution-deform",
      "short_flag": "--finest-resolution-deform",
      "action": "store",
      "help": "Resolution of the finest grid in millimeter (deformation field).",
      "default": 8.0,
      "ui_exposed": true
    },
    {
      "name": "weight_transformation",
      "type": "float",
      "optional": true,
      "flag": "--weight-transformation",
      "short_flag": "--weight-transformation",
      "action": "store",
      "help": "Weight of transformation regularization.",
      "default": 0.1,
      "ui_exposed": true
    },
    {
      "name": "weight_bias",
      "type": "float",
      "optional": true,
      "flag": "--weight-bias",
      "short_flag": "--weight-bias",
      "action": "store",
      "help": "Weight of bias field regularization.",
      "default": 100.0,
      "ui_exposed": true
    },
    {
      "name": "image_regularization",
      "type": "str",
      "optional": true,
      "flag": "--image-regularization",
      "short_flag": "--image-regularization",
      "action": "store",
      "help": "Type of image regularization.\n\n1. \"TV\": total variation (L1 regularization of image gradient);\n\n2. \"edge\": edge-preserving regularization, see --delta.\n\n3. \"L2\": L2 regularization of image gradient;\n\n4. \"none\": no image regularization.\n [choices: TV, edge, L2, none]",
      "default": "edge",
      "ui_exposed": true
    },
    {
      "name": "weight_image",
      "type": "float",
      "optional": true,
      "flag": "--weight-image",
      "short_flag": "--weight-image",
      "action": "store",
      "help": "Weight of image regularization.",
      "default": 1.0,
      "ui_exposed": true
    },
    {
      "name": "delta",
      "type": "float",
      "optional": true,
      "flag": "--delta",
      "short_flag": "--delta",
      "action": "store",
      "help": "Parameter to define intensity of an edge in edge-preserving\nregularization. See --image-regularization.The edge-preserving\nregularization becomes L1 when \"delta\" goes to 0.\n",
      "default": 0.2,
      "ui_exposed": true
    },
    {
      "name": "img_reg_autodiff",
      "type": "bool",
      "optional": true,
      "flag": "--img-reg-autodiff",
      "short_flag": "--img-reg-autodiff",
      "action": "store_true",
      "help": "Use auto diff to compute the image graident in the image regularization. By default, the finite difference is used.",
      "default": false,
      "ui_exposed": true
    },
    {
      "name": "weight_deform",
      "type": "float",
      "optional": true,
      "flag": "--weight-deform",
      "short_flag": "--weight-deform",
      "action": "store",
      "help": "Weight of deformation regularization ",
      "default": 0.1,
      "ui_exposed": true
    },
    {
      "name": "learning_rate",
      "type": "float",
      "optional": true,
      "flag": "--learning-rate",
      "short_flag": "--learning-rate",
      "action": "store",
      "help": "Learning rate of Adam optimizer.",
      "default": 0.005,
      "ui_exposed": true
    },
    {
      "name": "gamma",
      "type": "float",
      "optional": true,
      "flag": "--gamma",
      "short_flag": "--gamma",
      "action": "store",
      "help": "Multiplicative factor of learning rate decay.",
      "default": 0.33,
      "ui_exposed": true
    },
    {
      "name": "milestones",
      "type": "float",
      "optional": true,
      "flag": "--milestones",
      "short_flag": "--milestones",
      "action": "store",
      "help": "List of milestones of learning rate decay. Must be in (0, 1) and increasing.",
      "default": 0.0,
      "ui_exposed": true
    },
    {
      "name": "n_iter",
      "type": "int",
      "optional": true,
      "flag": "--n-iter",
      "short_flag": "--n-iter",
      "action": "store",
      "help": "Number of iterations for training.",
      "default": 6000,
      "ui_exposed": true
    },
    {
      "name": "n_epochs",
      "type": "int",
      "optional": true,
      "flag": "--n-epochs",
      "short_flag": "--n-epochs",
      "action": "store",
      "help": "Number of epochs for training. If provided, will ignore --n-iter\n",
      "default": -1,
      "ui_exposed": true
    },
    {
      "name": "batch_size",
      "type": "int",
      "optional": true,
      "flag": "--batch-size",
      "short_flag": "--batch-size",
      "action": "store",
      "help": "Batch size for training.",
      "default": 4096,
      "ui_exposed": true
    },
    {
      "name": "n_samples",
      "type": "int",
      "optional": true,
      "flag": "--n-samples",
      "short_flag": "--n-samples",
      "action": "store",
      "help": "Number of sample for PSF during training.",
      "default": 256,
      "ui_exposed": true
    },
    {
      "name": "single_precision",
      "type": "bool",
      "optional": true,
      "flag": "--single-precision",
      "short_flag": "--single-precision",
      "action": "store_true",
      "help": "use float32 training (default: float16/float32 mixed trainig)",
      "default": false,
      "ui_exposed": true
    },
    {
      "name": "device",
      "type": "int",
      "optional": true,
      "flag": "--device",
      "short_flag": "--device",
      "action": "store",
      "help": "Id of the GPU to use.",
      "default": 0,
      "ui_exposed": true
    },
    {
      "name": "verbose",
      "type": "int",
      "optional": true,
      "flag": "--verbose",
      "short_flag": "--verbose",
      "action": "store",
      "help": "Level of verbosity: (0: warning/error, 1: info, 2: debug) [choices: 0, 1, 2]",
      "default": 1,
      "ui_exposed": true
    },
    {
      "name": "output_log",
      "type": "str",
      "optional": true,
      "flag": "--output-log",
      "short_flag": "--output-log",
      "action": "store",
      "help": "Path to the output log file",
      "default": "",
      "ui_exposed": true
    },
    {
      "name": "seed",
      "type": "int",
      "optional": true,
      "flag": "--seed",
      "short_flag": "--seed",
      "action": "store",
      "help": "Random seed",
      "default": -1,
      "ui_exposed": true
    },
    {
      "name": "debug",
      "type": "bool",
      "optional": true,
      "flag": "--debug",
      "short_flag": "--debug",
      "action": "store_true",
      "help": "Debug mode.",
      "default": false,
      "ui_exposed": true
    }
  ],
  "icon": "",
  "authors": "Junshen Xu <junshen@mit.edu>",
  "title": "ChRIS plugin for NeSVoR",
  "category": "Reconstruction",
  "description": "This ChRIS plugin is a wrapper of NeSVoR",
  "documentation": "https://github.com/daviddmc/pl-nesvor",
  "license": "MIT",
  "version": "0.1.0",
  "selfpath": "/usr/local/bin",
  "selfexec": "nesvor_reconstruct",
  "execshell": "/usr/bin/python3",
  "min_number_of_workers": 1,
  "max_number_of_workers": 1,
  "min_memory_limit": "",
  "max_memory_limit": "",
  "min_cpu_limit": "",
  "max_cpu_limit": "",
  "min_gpu_limit": 1,
  "max_gpu_limit": 0
}
